services:
  router:
    build: .
    container_name: router
    privileged: true  # Necesario para iptables y sysctl
    networks:
      router_router_net:
        ipv4_address: 172.10.0.2
      services_net:
        ipv4_address: 172.20.0.2
      production_net:
        ipv4_address: 172.30.0.2
      development_net:
        ipv4_address: 172.40.0.2
    volumes:
      - ./dhcpd.conf:/etc/dhcp/dhcpd.conf 
      - ./iptables_rules.sh:/iptables_rules.sh
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      - |
        # Configurar iptables para usar la versión legacy
        update-alternatives --set iptables /usr/sbin/iptables-legacy
        update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy

        # Configuración de DHCP
        touch /var/lib/dhcp/dhcpd.leases
        chmod 644 /var/lib/dhcp/dhcpd.leases
        echo "1" > /proc/sys/net/ipv4/ip_forward
        dhcpd -cf /etc/dhcp/dhcpd.conf -f &  # Arrancar DHCP en segundo plano

        # Aplicar reglas de iptables
        chmod +x /iptables_rules.sh
        sh /iptables_rules.sh

        tail -f /dev/null  # Mantiene el contenedor activo

  drupal_production:
    image: drupal:latest
    container_name: drupal_apache
    restart: always
    privileged: true
    ports:
      - '8082:80'
    environment:
      DRUPAL_DB_HOST: postgres_db
      DRUPAL_DB_NAME: drupal
      DRUPAL_DB_USER: drupaluser
      DRUPAL_DB_PASSWORD: drupalpass
    networks:
      - production_net
    command: >
      /bin/bash -c "
        # Instalar isc-dhcp-client
        apt update && apt install -y isc-dhcp-client iputils-ping telnet &&
        # Elimina la IP asignada por Docker
        ip addr del $(hostname -i)/24 dev eth0
        # Obtén la IP mediante DHCP
        dhclient -r eth0 && dhclient eth0 && 
        # Asegúrate de que la IP se haya asignado correctamente
        sleep 5 && 
        # Agrega las rutas necesarias
        ip route add 172.20.0.0/24 via 172.30.0.2 &&
        ip route add 172.40.0.0/24 via 172.30.0.2 &&
        # Mantén el contenedor activo
        tail -f /dev/null
      "
    volumes:
      - drupal_data:/var/www/html
    depends_on:
      - postgres_db


  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    privileged: true
    environment:
      POSTGRES_DB: drupal
      POSTGRES_USER: drupaluser
      POSTGRES_PASSWORD: drupalpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - production_net
    # Comando para tener solo una IP asignada por el servidor DHCP y mantener el contenedor activo
    command: >
      /bin/bash -c "
        # Instalar isc-dhcp-client
        apt update && apt install -y isc-dhcp-client iputils-ping netcat-openbsd &&
        # Elimina la IP asignada por Docker
        ip addr del $(hostname -i)/24 dev eth0
        # Obtén la IP mediante DHCP
        dhclient -r eth0 && dhclient eth0 && 
        # Asegúrate de que la IP se haya asignado correctamente
        sleep 5 && 
        # Agrega las rutas necesarias
        ip route add 172.20.0.0/24 via 172.30.0.2 &&
        ip route add 172.40.0.0/24 via 172.30.0.2 &&
        # Mantén el contenedor activo
        tail -f /dev/null
      "
    ports:
      - '5432:5432'  # Puerto estándar de PostgreSQL
      - '873:873/tcp' # Puerto rsync para comunicación restringida con service_net
    depends_on:
      - router

  drupal_dev:
    image: drupal:latest
    container_name: drupal_dev
    restart: always
    privileged: true
    environment:
      DRUPAL_DB_HOST: mysql_dev
      DRUPAL_DB_USER: drupal
      DRUPAL_DB_PASSWORD: drupal
      DRUPAL_DB_NAME: drupal
    ports:
      - '8081:80'
    networks:
      - development_net
    command: >
      /bin/bash -c "
        # Instalar isc-dhcp-client
        apt update && apt install -y isc-dhcp-client iputils-ping telnet &&
        # Elimina la IP asignada por Docker
        ip addr del $(hostname -i)/24 dev eth0
        # Obtén la IP mediante DHCP
        dhclient -r eth0 && dhclient eth0 && 
        # Asegúrate de que la IP se haya asignado correctamente
        sleep 5 && 
        # Agrega las rutas necesarias
        ip route add 172.20.0.0/24 via 172.40.0.2 &&   
        ip route add 172.30.0.0/24 via 172.40.0.2 &&
        # Mantén el contenedor activo
        tail -f /dev/null
      "
    volumes:
      - drupal_data:/var/www/html
    depends_on:
      - mysql_dev

  mysql_dev:
    image: mysql:8.0-debian
    container_name: mysql_dev
    restart: always
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - development_net
    command: >
      /bin/bash -c "
        # Instalar isc-dhcp-client
        apt update && apt install -y isc-dhcp-client iputils-ping telnet &&
        # Elimina la IP asignada por Docker
        ip addr del $(hostname -i)/24 dev eth0
        # Obtén la IP mediante DHCP
        dhclient -r eth0 && dhclient eth0 && 
        # Asegúrate de que la IP se haya asignado correctamente
        sleep 5 && 
        # Agrega las rutas necesarias
        ip route add 172.20.0.0/24 via 172.40.0.2 &&   
        ip route add 172.30.0.0/24 via 172.40.0.2 &&
        # Mantén el contenedor activo
        tail -f /dev/null
      "
    depends_on:
      - router


  
  nas_server:
    image: crazymax/samba
    container_name: nas_server
    restart: always
    privileged: true
    networks:
      - services_net
    volumes:
      - nas_storage:/data
    environment:
      SAMBA_LOG_LEVEL: 2
      SAMBA_SHARE_NAME: "Shared"
      SAMBA_SHARE_PATH: "/data"
      SAMBA_USERNAME: "admin"
      SAMBA_PASSWORD: "naspass"
    command: >
      /bin/sh -c "
        # Instalar isc-dhcp-client y otras herramientas necesarias en Alpine
        apk update && apk add --no-cache dhclient iputils ping telnet iproute2 &&

        # Eliminar la IP asignada por Docker (si hay una asignada previamente)
        ip addr del $(hostname -i)/24 dev eth0 || true &&
      
        # Obtener la IP mediante DHCP
        udhcpc -i eth0 -q -T 3 -n &&

        # Asegurarse de que la IP se haya asignado correctamente
        sleep 5 &&

        # Agregar las rutas necesarias
        ip route add 172.30.0.0/24 via 172.20.0.2 &&
        ip route add 172.40.0.0/24 via 172.20.0.2 &&

        # Mantener el contenedor activo
        tail -f /dev/null
      "
    depends_on:
      - router
    

  dns_server:
    image: ubuntu/bind9
    container_name: dns_server
    restart: always
    privileged: true
    networks:
      - services_net
    ports:
      - '53:53/tcp'
      - '53:53/udp'
    environment:
      BIND9_USER: "root"
    # Comando para tener solo una IP asignada por el servidor DHCP y mantener el contenedor activo
    command: >
      /bin/bash -c "
        # Instalar isc-dhcp-client
        apt update && apt install -y isc-dhcp-client iputils-ping telnet &&
        # Elimina la IP asignada por Docker
        ip addr del $(hostname -i)/24 dev eth0
        # Obtén la IP mediante DHCP
        dhclient -r eth0 && dhclient eth0 && 
        # Asegúrate de que la IP se haya asignado correctamente
        sleep 5 && 
        # Agrega las rutas necesarias
        ip route add 172.30.0.0/24 via 172.20.0.2 &&
        ip route add 172.40.0.0/24 via 172.20.0.2 &&
        # Mantén el contenedor activo
        tail -f /dev/null
      "    
    volumes:
      - dns_config:/etc/bind
    depends_on:
      - router

volumes:
  drupal_data:
  postgres_data:
  mysql_data:
  nas_storage:
  dns_config:

networks:
  router_router_net:
    external: true
  services_net:
    external: true
  production_net:
    external: true
  development_net:
    external: true
